name: Linters

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint-readme:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false
      - name: Validate README lists
        run: |
          NODEJS_README_PATH=$(mktemp)
          curl -sSLo "$NODEJS_README_PATH" https://github.com/nodejs/node/raw/HEAD/README.md
          {
            sed -n '/^<!-- Active releasers keys -->$/q;p' README.md
            echo '<!-- Active releasers keys -->'
            echo
            awk -F'`' '/^### Release keys$/,/^<summary>Other keys used to sign some previous releases<.summary>$/{if($1 == "  ") print "  [`" $2 "`](./keys/" $2 ".asc)"; else if (substr($0, 0, 2) == "* ") print }' "$NODEJS_README_PATH"
            echo
            sed -n '\#^<!-- /Active releasers keys -->$#,/^<!-- Retired keys -->$/p' README.md
            echo
            awk -F'`' '/^<summary>Other keys used to sign some previous releases<.summary>$/,/^<.details>$/{if($1 == "  ") print "  [`" $2 "`](./keys/" $2 ".asc)"; else if (substr($0, 0, 2) == "* ") print }' "$NODEJS_README_PATH"
            echo
            sed -n '\#^<!-- /Retired keys -->$#,$p' README.md
          } | diff README.md -

  lint-latest-releases:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Validate that latest versions of all non-EOL release lines can be verified using the "only-active-keys" keyring
        run: |
          set -x
          curl -fsLo pubring.kbx "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/raw/$GITHUB_SHA/gpg-only-active-keys/pubring.kbx"
          curl -fso index.json https://nodejs.org/dist/index.json
          curl -fsL https://github.com/nodejs/Release/raw/HEAD/schedule.json \
          | jq -er 'to_entries.[] | select(("\(.value.end)T00:00:00Z" | fromdate) > now) | .key' \
          | while read -r RELEASE_LINE; do
            echo "Resolving latest $RELEASE_LINE..."
            VERSION=$(jq -r --arg RELEASE_LINE "$RELEASE_LINE" 'first(.[] | select(.version | startswith($RELEASE_LINE))) | .version' < index.json)
            [ -z "$VERSION" ] || {
              echo "Checking $VERSION..."
              curl --fail --silent "https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc" \
              | gpgv --keyring=./pubring.kbx
            }
          done
        shell: bash # See https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference, we want the pipefail option.
